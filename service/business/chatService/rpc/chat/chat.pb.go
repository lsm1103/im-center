// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NullResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NullResp) Reset()         { *m = NullResp{} }
func (m *NullResp) String() string { return proto.CompactTextString(m) }
func (*NullResp) ProtoMessage()    {}
func (*NullResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *NullResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NullResp.Unmarshal(m, b)
}
func (m *NullResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NullResp.Marshal(b, m, deterministic)
}
func (m *NullResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NullResp.Merge(m, src)
}
func (m *NullResp) XXX_Size() int {
	return xxx_messageInfo_NullResp.Size(m)
}
func (m *NullResp) XXX_DiscardUnknown() {
	xxx_messageInfo_NullResp.DiscardUnknown(m)
}

var xxx_messageInfo_NullResp proto.InternalMessageInfo

type GetsQueryItem struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Val                  string   `protobuf:"bytes,2,opt,name=Val,proto3" json:"Val,omitempty"`
	Handle               string   `protobuf:"bytes,3,opt,name=Handle,proto3" json:"Handle,omitempty"`
	NextHandle           string   `protobuf:"bytes,4,opt,name=NextHandle,proto3" json:"NextHandle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetsQueryItem) Reset()         { *m = GetsQueryItem{} }
func (m *GetsQueryItem) String() string { return proto.CompactTextString(m) }
func (*GetsQueryItem) ProtoMessage()    {}
func (*GetsQueryItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *GetsQueryItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetsQueryItem.Unmarshal(m, b)
}
func (m *GetsQueryItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetsQueryItem.Marshal(b, m, deterministic)
}
func (m *GetsQueryItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetsQueryItem.Merge(m, src)
}
func (m *GetsQueryItem) XXX_Size() int {
	return xxx_messageInfo_GetsQueryItem.Size(m)
}
func (m *GetsQueryItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GetsQueryItem.DiscardUnknown(m)
}

var xxx_messageInfo_GetsQueryItem proto.InternalMessageInfo

func (m *GetsQueryItem) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetsQueryItem) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *GetsQueryItem) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

func (m *GetsQueryItem) GetNextHandle() string {
	if m != nil {
		return m.NextHandle
	}
	return ""
}

type GetsReq struct {
	Query                []*GetsQueryItem `protobuf:"bytes,1,rep,name=Query,proto3" json:"Query,omitempty"`
	OrderBy              string           `protobuf:"bytes,2,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`
	Sort                 string           `protobuf:"bytes,3,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Current              int64            `protobuf:"varint,4,opt,name=Current,proto3" json:"Current,omitempty"`
	PageSize             int64            `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetsReq) Reset()         { *m = GetsReq{} }
func (m *GetsReq) String() string { return proto.CompactTextString(m) }
func (*GetsReq) ProtoMessage()    {}
func (*GetsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *GetsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetsReq.Unmarshal(m, b)
}
func (m *GetsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetsReq.Marshal(b, m, deterministic)
}
func (m *GetsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetsReq.Merge(m, src)
}
func (m *GetsReq) XXX_Size() int {
	return xxx_messageInfo_GetsReq.Size(m)
}
func (m *GetsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetsReq proto.InternalMessageInfo

func (m *GetsReq) GetQuery() []*GetsQueryItem {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *GetsReq) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *GetsReq) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *GetsReq) GetCurrent() int64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *GetsReq) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type FriendItem struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ApplyUser            int64    `protobuf:"varint,2,opt,name=apply_user,json=applyUser,proto3" json:"apply_user,omitempty"`
	ApplyDevice          string   `protobuf:"bytes,3,opt,name=apply_device,json=applyDevice,proto3" json:"apply_device,omitempty"`
	AcceptUser           int64    `protobuf:"varint,4,opt,name=accept_user,json=acceptUser,proto3" json:"accept_user,omitempty"`
	ApplyReason          string   `protobuf:"bytes,5,opt,name=apply_reason,json=applyReason,proto3" json:"apply_reason,omitempty"`
	Extra                string   `protobuf:"bytes,6,opt,name=extra,proto3" json:"extra,omitempty"`
	Status               int64    `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime           string   `protobuf:"bytes,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,9,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendItem) Reset()         { *m = FriendItem{} }
func (m *FriendItem) String() string { return proto.CompactTextString(m) }
func (*FriendItem) ProtoMessage()    {}
func (*FriendItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *FriendItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendItem.Unmarshal(m, b)
}
func (m *FriendItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendItem.Marshal(b, m, deterministic)
}
func (m *FriendItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendItem.Merge(m, src)
}
func (m *FriendItem) XXX_Size() int {
	return xxx_messageInfo_FriendItem.Size(m)
}
func (m *FriendItem) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendItem.DiscardUnknown(m)
}

var xxx_messageInfo_FriendItem proto.InternalMessageInfo

func (m *FriendItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FriendItem) GetApplyUser() int64 {
	if m != nil {
		return m.ApplyUser
	}
	return 0
}

func (m *FriendItem) GetApplyDevice() string {
	if m != nil {
		return m.ApplyDevice
	}
	return ""
}

func (m *FriendItem) GetAcceptUser() int64 {
	if m != nil {
		return m.AcceptUser
	}
	return 0
}

func (m *FriendItem) GetApplyReason() string {
	if m != nil {
		return m.ApplyReason
	}
	return ""
}

func (m *FriendItem) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *FriendItem) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *FriendItem) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *FriendItem) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type AddFriendReq struct {
	ApplyUser            int64    `protobuf:"varint,1,opt,name=apply_user,json=applyUser,proto3" json:"apply_user,omitempty"`
	ApplyDevice          string   `protobuf:"bytes,2,opt,name=apply_device,json=applyDevice,proto3" json:"apply_device,omitempty"`
	AcceptUser           int64    `protobuf:"varint,3,opt,name=accept_user,json=acceptUser,proto3" json:"accept_user,omitempty"`
	ApplyReason          string   `protobuf:"bytes,4,opt,name=apply_reason,json=applyReason,proto3" json:"apply_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFriendReq) Reset()         { *m = AddFriendReq{} }
func (m *AddFriendReq) String() string { return proto.CompactTextString(m) }
func (*AddFriendReq) ProtoMessage()    {}
func (*AddFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{4}
}

func (m *AddFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFriendReq.Unmarshal(m, b)
}
func (m *AddFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFriendReq.Marshal(b, m, deterministic)
}
func (m *AddFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFriendReq.Merge(m, src)
}
func (m *AddFriendReq) XXX_Size() int {
	return xxx_messageInfo_AddFriendReq.Size(m)
}
func (m *AddFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFriendReq proto.InternalMessageInfo

func (m *AddFriendReq) GetApplyUser() int64 {
	if m != nil {
		return m.ApplyUser
	}
	return 0
}

func (m *AddFriendReq) GetApplyDevice() string {
	if m != nil {
		return m.ApplyDevice
	}
	return ""
}

func (m *AddFriendReq) GetAcceptUser() int64 {
	if m != nil {
		return m.AcceptUser
	}
	return 0
}

func (m *AddFriendReq) GetApplyReason() string {
	if m != nil {
		return m.ApplyReason
	}
	return ""
}

type BatchChangeFriendRelationReq struct {
	FriendIds            []int64  `protobuf:"varint,1,rep,packed,name=friend_ids,json=friendIds,proto3" json:"friend_ids,omitempty"`
	OperationType        int64    `protobuf:"varint,2,opt,name=operationType,proto3" json:"operationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchChangeFriendRelationReq) Reset()         { *m = BatchChangeFriendRelationReq{} }
func (m *BatchChangeFriendRelationReq) String() string { return proto.CompactTextString(m) }
func (*BatchChangeFriendRelationReq) ProtoMessage()    {}
func (*BatchChangeFriendRelationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{5}
}

func (m *BatchChangeFriendRelationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchChangeFriendRelationReq.Unmarshal(m, b)
}
func (m *BatchChangeFriendRelationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchChangeFriendRelationReq.Marshal(b, m, deterministic)
}
func (m *BatchChangeFriendRelationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchChangeFriendRelationReq.Merge(m, src)
}
func (m *BatchChangeFriendRelationReq) XXX_Size() int {
	return xxx_messageInfo_BatchChangeFriendRelationReq.Size(m)
}
func (m *BatchChangeFriendRelationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchChangeFriendRelationReq.DiscardUnknown(m)
}

var xxx_messageInfo_BatchChangeFriendRelationReq proto.InternalMessageInfo

func (m *BatchChangeFriendRelationReq) GetFriendIds() []int64 {
	if m != nil {
		return m.FriendIds
	}
	return nil
}

func (m *BatchChangeFriendRelationReq) GetOperationType() int64 {
	if m != nil {
		return m.OperationType
	}
	return 0
}

type FriendGetsResp struct {
	List                 []*FriendItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Current              int64         `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	PageSize             int64         `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	IsNext               bool          `protobuf:"varint,4,opt,name=isNext,proto3" json:"isNext,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FriendGetsResp) Reset()         { *m = FriendGetsResp{} }
func (m *FriendGetsResp) String() string { return proto.CompactTextString(m) }
func (*FriendGetsResp) ProtoMessage()    {}
func (*FriendGetsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{6}
}

func (m *FriendGetsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendGetsResp.Unmarshal(m, b)
}
func (m *FriendGetsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendGetsResp.Marshal(b, m, deterministic)
}
func (m *FriendGetsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendGetsResp.Merge(m, src)
}
func (m *FriendGetsResp) XXX_Size() int {
	return xxx_messageInfo_FriendGetsResp.Size(m)
}
func (m *FriendGetsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendGetsResp.DiscardUnknown(m)
}

var xxx_messageInfo_FriendGetsResp proto.InternalMessageInfo

func (m *FriendGetsResp) GetList() []*FriendItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *FriendGetsResp) GetCurrent() int64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *FriendGetsResp) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *FriendGetsResp) GetIsNext() bool {
	if m != nil {
		return m.IsNext
	}
	return false
}

type SendOneMsgReq struct {
	SenderType           string   `protobuf:"bytes,1,opt,name=sender_type,json=senderType,proto3" json:"sender_type,omitempty"`
	SenderId             int64    `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderDeviceId       string   `protobuf:"bytes,3,opt,name=sender_device_id,json=senderDeviceId,proto3" json:"sender_device_id,omitempty"`
	ReceiverId           int64    `protobuf:"varint,4,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	ReceiverDeviceId     string   `protobuf:"bytes,5,opt,name=receiver_device_id,json=receiverDeviceId,proto3" json:"receiver_device_id,omitempty"`
	ParentId             int64    `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	SendTime             string   `protobuf:"bytes,7,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	MsgType              string   `protobuf:"bytes,8,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	Content              string   `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendOneMsgReq) Reset()         { *m = SendOneMsgReq{} }
func (m *SendOneMsgReq) String() string { return proto.CompactTextString(m) }
func (*SendOneMsgReq) ProtoMessage()    {}
func (*SendOneMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{7}
}

func (m *SendOneMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendOneMsgReq.Unmarshal(m, b)
}
func (m *SendOneMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendOneMsgReq.Marshal(b, m, deterministic)
}
func (m *SendOneMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendOneMsgReq.Merge(m, src)
}
func (m *SendOneMsgReq) XXX_Size() int {
	return xxx_messageInfo_SendOneMsgReq.Size(m)
}
func (m *SendOneMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendOneMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendOneMsgReq proto.InternalMessageInfo

func (m *SendOneMsgReq) GetSenderType() string {
	if m != nil {
		return m.SenderType
	}
	return ""
}

func (m *SendOneMsgReq) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *SendOneMsgReq) GetSenderDeviceId() string {
	if m != nil {
		return m.SenderDeviceId
	}
	return ""
}

func (m *SendOneMsgReq) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *SendOneMsgReq) GetReceiverDeviceId() string {
	if m != nil {
		return m.ReceiverDeviceId
	}
	return ""
}

func (m *SendOneMsgReq) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *SendOneMsgReq) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *SendOneMsgReq) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *SendOneMsgReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type At struct {
	IsAtAll              bool     `protobuf:"varint,1,opt,name=is_at_all,json=isAtAll,proto3" json:"is_at_all,omitempty"`
	AtUserIds            []int64  `protobuf:"varint,2,rep,packed,name=at_user_ids,json=atUserIds,proto3" json:"at_user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *At) Reset()         { *m = At{} }
func (m *At) String() string { return proto.CompactTextString(m) }
func (*At) ProtoMessage()    {}
func (*At) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{8}
}

func (m *At) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_At.Unmarshal(m, b)
}
func (m *At) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_At.Marshal(b, m, deterministic)
}
func (m *At) XXX_Merge(src proto.Message) {
	xxx_messageInfo_At.Merge(m, src)
}
func (m *At) XXX_Size() int {
	return xxx_messageInfo_At.Size(m)
}
func (m *At) XXX_DiscardUnknown() {
	xxx_messageInfo_At.DiscardUnknown(m)
}

var xxx_messageInfo_At proto.InternalMessageInfo

func (m *At) GetIsAtAll() bool {
	if m != nil {
		return m.IsAtAll
	}
	return false
}

func (m *At) GetAtUserIds() []int64 {
	if m != nil {
		return m.AtUserIds
	}
	return nil
}

type SendManyMsgReq struct {
	SenderType           string   `protobuf:"bytes,1,opt,name=sender_type,json=senderType,proto3" json:"sender_type,omitempty"`
	SenderId             int64    `protobuf:"varint,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderDeviceId       string   `protobuf:"bytes,3,opt,name=sender_device_id,json=senderDeviceId,proto3" json:"sender_device_id,omitempty"`
	ReceiverId           int64    `protobuf:"varint,4,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	ReceiverDeviceId     string   `protobuf:"bytes,5,opt,name=receiver_device_id,json=receiverDeviceId,proto3" json:"receiver_device_id,omitempty"`
	ParentId             int64    `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	SendTime             string   `protobuf:"bytes,7,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	At                   *At      `protobuf:"bytes,8,opt,name=at,proto3" json:"at,omitempty"`
	MsgType              string   `protobuf:"bytes,9,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	Content              string   `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendManyMsgReq) Reset()         { *m = SendManyMsgReq{} }
func (m *SendManyMsgReq) String() string { return proto.CompactTextString(m) }
func (*SendManyMsgReq) ProtoMessage()    {}
func (*SendManyMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{9}
}

func (m *SendManyMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendManyMsgReq.Unmarshal(m, b)
}
func (m *SendManyMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendManyMsgReq.Marshal(b, m, deterministic)
}
func (m *SendManyMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendManyMsgReq.Merge(m, src)
}
func (m *SendManyMsgReq) XXX_Size() int {
	return xxx_messageInfo_SendManyMsgReq.Size(m)
}
func (m *SendManyMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendManyMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendManyMsgReq proto.InternalMessageInfo

func (m *SendManyMsgReq) GetSenderType() string {
	if m != nil {
		return m.SenderType
	}
	return ""
}

func (m *SendManyMsgReq) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *SendManyMsgReq) GetSenderDeviceId() string {
	if m != nil {
		return m.SenderDeviceId
	}
	return ""
}

func (m *SendManyMsgReq) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *SendManyMsgReq) GetReceiverDeviceId() string {
	if m != nil {
		return m.ReceiverDeviceId
	}
	return ""
}

func (m *SendManyMsgReq) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *SendManyMsgReq) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *SendManyMsgReq) GetAt() *At {
	if m != nil {
		return m.At
	}
	return nil
}

func (m *SendManyMsgReq) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *SendManyMsgReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// 消息ack
type AckMsgReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ObjectType           string   `protobuf:"bytes,3,opt,name=objectType,proto3" json:"objectType,omitempty"`
	ObjectId             int64    `protobuf:"varint,4,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Seq                  int64    `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckMsgReq) Reset()         { *m = AckMsgReq{} }
func (m *AckMsgReq) String() string { return proto.CompactTextString(m) }
func (*AckMsgReq) ProtoMessage()    {}
func (*AckMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{10}
}

func (m *AckMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckMsgReq.Unmarshal(m, b)
}
func (m *AckMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckMsgReq.Marshal(b, m, deterministic)
}
func (m *AckMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckMsgReq.Merge(m, src)
}
func (m *AckMsgReq) XXX_Size() int {
	return xxx_messageInfo_AckMsgReq.Size(m)
}
func (m *AckMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AckMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_AckMsgReq proto.InternalMessageInfo

func (m *AckMsgReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AckMsgReq) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *AckMsgReq) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *AckMsgReq) GetObjectId() int64 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *AckMsgReq) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type SyncMsgReq struct {
	SingleSeq            int64    `protobuf:"varint,1,opt,name=single_seq,json=singleSeq,proto3" json:"single_seq,omitempty"`
	GroupSeq             int64    `protobuf:"varint,2,opt,name=group_seq,json=groupSeq,proto3" json:"group_seq,omitempty"`
	OperationType        string   `protobuf:"bytes,3,opt,name=operationType,proto3" json:"operationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncMsgReq) Reset()         { *m = SyncMsgReq{} }
func (m *SyncMsgReq) String() string { return proto.CompactTextString(m) }
func (*SyncMsgReq) ProtoMessage()    {}
func (*SyncMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{11}
}

func (m *SyncMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncMsgReq.Unmarshal(m, b)
}
func (m *SyncMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncMsgReq.Marshal(b, m, deterministic)
}
func (m *SyncMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMsgReq.Merge(m, src)
}
func (m *SyncMsgReq) XXX_Size() int {
	return xxx_messageInfo_SyncMsgReq.Size(m)
}
func (m *SyncMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMsgReq proto.InternalMessageInfo

func (m *SyncMsgReq) GetSingleSeq() int64 {
	if m != nil {
		return m.SingleSeq
	}
	return 0
}

func (m *SyncMsgReq) GetGroupSeq() int64 {
	if m != nil {
		return m.GroupSeq
	}
	return 0
}

func (m *SyncMsgReq) GetOperationType() string {
	if m != nil {
		return m.OperationType
	}
	return ""
}

type SingleMsgItem struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SenderType           string   `protobuf:"bytes,2,opt,name=sender_type,json=senderType,proto3" json:"sender_type,omitempty"`
	SenderId             int64    `protobuf:"varint,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderDeviceId       string   `protobuf:"bytes,4,opt,name=sender_device_id,json=senderDeviceId,proto3" json:"sender_device_id,omitempty"`
	ReceiverId           int64    `protobuf:"varint,5,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	MsgType              string   `protobuf:"bytes,6,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	Content              string   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	ParentId             int64    `protobuf:"varint,8,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	SendTime             string   `protobuf:"bytes,9,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	Status               int64    `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime           string   `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,12,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleMsgItem) Reset()         { *m = SingleMsgItem{} }
func (m *SingleMsgItem) String() string { return proto.CompactTextString(m) }
func (*SingleMsgItem) ProtoMessage()    {}
func (*SingleMsgItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{12}
}

func (m *SingleMsgItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleMsgItem.Unmarshal(m, b)
}
func (m *SingleMsgItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleMsgItem.Marshal(b, m, deterministic)
}
func (m *SingleMsgItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleMsgItem.Merge(m, src)
}
func (m *SingleMsgItem) XXX_Size() int {
	return xxx_messageInfo_SingleMsgItem.Size(m)
}
func (m *SingleMsgItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleMsgItem.DiscardUnknown(m)
}

var xxx_messageInfo_SingleMsgItem proto.InternalMessageInfo

func (m *SingleMsgItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SingleMsgItem) GetSenderType() string {
	if m != nil {
		return m.SenderType
	}
	return ""
}

func (m *SingleMsgItem) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *SingleMsgItem) GetSenderDeviceId() string {
	if m != nil {
		return m.SenderDeviceId
	}
	return ""
}

func (m *SingleMsgItem) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *SingleMsgItem) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *SingleMsgItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *SingleMsgItem) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *SingleMsgItem) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *SingleMsgItem) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SingleMsgItem) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *SingleMsgItem) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type GroupMsgItem struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SenderType           string   `protobuf:"bytes,2,opt,name=sender_type,json=senderType,proto3" json:"sender_type,omitempty"`
	SenderId             int64    `protobuf:"varint,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderDeviceId       string   `protobuf:"bytes,4,opt,name=sender_device_id,json=senderDeviceId,proto3" json:"sender_device_id,omitempty"`
	ReceiverId           int64    `protobuf:"varint,5,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	At                   *At      `protobuf:"bytes,6,opt,name=at,proto3" json:"at,omitempty"`
	MsgType              string   `protobuf:"bytes,7,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	Content              string   `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	ParentId             int64    `protobuf:"varint,9,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	SendTime             string   `protobuf:"bytes,10,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	Status               int64    `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime           string   `protobuf:"bytes,12,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupMsgItem) Reset()         { *m = GroupMsgItem{} }
func (m *GroupMsgItem) String() string { return proto.CompactTextString(m) }
func (*GroupMsgItem) ProtoMessage()    {}
func (*GroupMsgItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{13}
}

func (m *GroupMsgItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupMsgItem.Unmarshal(m, b)
}
func (m *GroupMsgItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupMsgItem.Marshal(b, m, deterministic)
}
func (m *GroupMsgItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupMsgItem.Merge(m, src)
}
func (m *GroupMsgItem) XXX_Size() int {
	return xxx_messageInfo_GroupMsgItem.Size(m)
}
func (m *GroupMsgItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupMsgItem.DiscardUnknown(m)
}

var xxx_messageInfo_GroupMsgItem proto.InternalMessageInfo

func (m *GroupMsgItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GroupMsgItem) GetSenderType() string {
	if m != nil {
		return m.SenderType
	}
	return ""
}

func (m *GroupMsgItem) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *GroupMsgItem) GetSenderDeviceId() string {
	if m != nil {
		return m.SenderDeviceId
	}
	return ""
}

func (m *GroupMsgItem) GetReceiverId() int64 {
	if m != nil {
		return m.ReceiverId
	}
	return 0
}

func (m *GroupMsgItem) GetAt() *At {
	if m != nil {
		return m.At
	}
	return nil
}

func (m *GroupMsgItem) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *GroupMsgItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *GroupMsgItem) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *GroupMsgItem) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *GroupMsgItem) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GroupMsgItem) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *GroupMsgItem) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

type SyncMsgResp struct {
	SingleMsgList        []*SingleMsgItem `protobuf:"bytes,1,rep,name=SingleMsgList,proto3" json:"SingleMsgList,omitempty"`
	GroupMsgList         []*GroupMsgItem  `protobuf:"bytes,2,rep,name=GroupMsgList,proto3" json:"GroupMsgList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SyncMsgResp) Reset()         { *m = SyncMsgResp{} }
func (m *SyncMsgResp) String() string { return proto.CompactTextString(m) }
func (*SyncMsgResp) ProtoMessage()    {}
func (*SyncMsgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{14}
}

func (m *SyncMsgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncMsgResp.Unmarshal(m, b)
}
func (m *SyncMsgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncMsgResp.Marshal(b, m, deterministic)
}
func (m *SyncMsgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMsgResp.Merge(m, src)
}
func (m *SyncMsgResp) XXX_Size() int {
	return xxx_messageInfo_SyncMsgResp.Size(m)
}
func (m *SyncMsgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMsgResp.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMsgResp proto.InternalMessageInfo

func (m *SyncMsgResp) GetSingleMsgList() []*SingleMsgItem {
	if m != nil {
		return m.SingleMsgList
	}
	return nil
}

func (m *SyncMsgResp) GetGroupMsgList() []*GroupMsgItem {
	if m != nil {
		return m.GroupMsgList
	}
	return nil
}

type WithdrawMsgReq struct {
	Seq                  int64    `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	ObjectType           string   `protobuf:"bytes,2,opt,name=objectType,proto3" json:"objectType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawMsgReq) Reset()         { *m = WithdrawMsgReq{} }
func (m *WithdrawMsgReq) String() string { return proto.CompactTextString(m) }
func (*WithdrawMsgReq) ProtoMessage()    {}
func (*WithdrawMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{15}
}

func (m *WithdrawMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithdrawMsgReq.Unmarshal(m, b)
}
func (m *WithdrawMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithdrawMsgReq.Marshal(b, m, deterministic)
}
func (m *WithdrawMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawMsgReq.Merge(m, src)
}
func (m *WithdrawMsgReq) XXX_Size() int {
	return xxx_messageInfo_WithdrawMsgReq.Size(m)
}
func (m *WithdrawMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawMsgReq proto.InternalMessageInfo

func (m *WithdrawMsgReq) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *WithdrawMsgReq) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

type BatchDelMsgReq struct {
	Seqs                 []int64  `protobuf:"varint,1,rep,packed,name=seqs,proto3" json:"seqs,omitempty"`
	ObjectType           string   `protobuf:"bytes,2,opt,name=objectType,proto3" json:"objectType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchDelMsgReq) Reset()         { *m = BatchDelMsgReq{} }
func (m *BatchDelMsgReq) String() string { return proto.CompactTextString(m) }
func (*BatchDelMsgReq) ProtoMessage()    {}
func (*BatchDelMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{16}
}

func (m *BatchDelMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchDelMsgReq.Unmarshal(m, b)
}
func (m *BatchDelMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchDelMsgReq.Marshal(b, m, deterministic)
}
func (m *BatchDelMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchDelMsgReq.Merge(m, src)
}
func (m *BatchDelMsgReq) XXX_Size() int {
	return xxx_messageInfo_BatchDelMsgReq.Size(m)
}
func (m *BatchDelMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchDelMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_BatchDelMsgReq proto.InternalMessageInfo

func (m *BatchDelMsgReq) GetSeqs() []int64 {
	if m != nil {
		return m.Seqs
	}
	return nil
}

func (m *BatchDelMsgReq) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

// --------------------------------------------------------------------------------------------------------
type GroupItem struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreateUser           int64    `protobuf:"varint,3,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	Ico                  string   `protobuf:"bytes,4,opt,name=ico,proto3" json:"ico,omitempty"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	ParentId             int64    `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	GroupType            int64    `protobuf:"varint,7,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`
	Rank                 int64    `protobuf:"varint,8,opt,name=rank,proto3" json:"rank,omitempty"`
	Status               int64    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime           string   `protobuf:"bytes,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupItem) Reset()         { *m = GroupItem{} }
func (m *GroupItem) String() string { return proto.CompactTextString(m) }
func (*GroupItem) ProtoMessage()    {}
func (*GroupItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{17}
}

func (m *GroupItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupItem.Unmarshal(m, b)
}
func (m *GroupItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupItem.Marshal(b, m, deterministic)
}
func (m *GroupItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupItem.Merge(m, src)
}
func (m *GroupItem) XXX_Size() int {
	return xxx_messageInfo_GroupItem.Size(m)
}
func (m *GroupItem) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupItem.DiscardUnknown(m)
}

var xxx_messageInfo_GroupItem proto.InternalMessageInfo

func (m *GroupItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GroupItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GroupItem) GetCreateUser() int64 {
	if m != nil {
		return m.CreateUser
	}
	return 0
}

func (m *GroupItem) GetIco() string {
	if m != nil {
		return m.Ico
	}
	return ""
}

func (m *GroupItem) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *GroupItem) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *GroupItem) GetGroupType() int64 {
	if m != nil {
		return m.GroupType
	}
	return 0
}

func (m *GroupItem) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *GroupItem) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GroupItem) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *GroupItem) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

// 获取群组详细信息
type GroupGetReq struct {
	GroupId              int64    `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupGetReq) Reset()         { *m = GroupGetReq{} }
func (m *GroupGetReq) String() string { return proto.CompactTextString(m) }
func (*GroupGetReq) ProtoMessage()    {}
func (*GroupGetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{18}
}

func (m *GroupGetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupGetReq.Unmarshal(m, b)
}
func (m *GroupGetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupGetReq.Marshal(b, m, deterministic)
}
func (m *GroupGetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupGetReq.Merge(m, src)
}
func (m *GroupGetReq) XXX_Size() int {
	return xxx_messageInfo_GroupGetReq.Size(m)
}
func (m *GroupGetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupGetReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupGetReq proto.InternalMessageInfo

func (m *GroupGetReq) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

// 获取群组列表
type GroupGetsResp struct {
	List                 []*GroupItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Current              int64        `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	PageSize             int64        `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	IsNext               bool         `protobuf:"varint,4,opt,name=isNext,proto3" json:"isNext,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GroupGetsResp) Reset()         { *m = GroupGetsResp{} }
func (m *GroupGetsResp) String() string { return proto.CompactTextString(m) }
func (*GroupGetsResp) ProtoMessage()    {}
func (*GroupGetsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{19}
}

func (m *GroupGetsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupGetsResp.Unmarshal(m, b)
}
func (m *GroupGetsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupGetsResp.Marshal(b, m, deterministic)
}
func (m *GroupGetsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupGetsResp.Merge(m, src)
}
func (m *GroupGetsResp) XXX_Size() int {
	return xxx_messageInfo_GroupGetsResp.Size(m)
}
func (m *GroupGetsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupGetsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GroupGetsResp proto.InternalMessageInfo

func (m *GroupGetsResp) GetList() []*GroupItem {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *GroupGetsResp) GetCurrent() int64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *GroupGetsResp) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GroupGetsResp) GetIsNext() bool {
	if m != nil {
		return m.IsNext
	}
	return false
}

// 创建群组
type GroupAddReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreateUser           int64    `protobuf:"varint,2,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	Ico                  string   `protobuf:"bytes,3,opt,name=ico,proto3" json:"ico,omitempty"`
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	ParentId             int64    `protobuf:"varint,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	GroupType            int64    `protobuf:"varint,6,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`
	Rank                 int64    `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupAddReq) Reset()         { *m = GroupAddReq{} }
func (m *GroupAddReq) String() string { return proto.CompactTextString(m) }
func (*GroupAddReq) ProtoMessage()    {}
func (*GroupAddReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{20}
}

func (m *GroupAddReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupAddReq.Unmarshal(m, b)
}
func (m *GroupAddReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupAddReq.Marshal(b, m, deterministic)
}
func (m *GroupAddReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupAddReq.Merge(m, src)
}
func (m *GroupAddReq) XXX_Size() int {
	return xxx_messageInfo_GroupAddReq.Size(m)
}
func (m *GroupAddReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupAddReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupAddReq proto.InternalMessageInfo

func (m *GroupAddReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GroupAddReq) GetCreateUser() int64 {
	if m != nil {
		return m.CreateUser
	}
	return 0
}

func (m *GroupAddReq) GetIco() string {
	if m != nil {
		return m.Ico
	}
	return ""
}

func (m *GroupAddReq) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *GroupAddReq) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *GroupAddReq) GetGroupType() int64 {
	if m != nil {
		return m.GroupType
	}
	return 0
}

func (m *GroupAddReq) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

// 修改群组
type GroupUpdateReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreateUser           int64    `protobuf:"varint,3,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	Ico                  string   `protobuf:"bytes,4,opt,name=ico,proto3" json:"ico,omitempty"`
	Remark               string   `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	ParentId             int64    `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	GroupType            int64    `protobuf:"varint,7,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`
	Rank                 int64    `protobuf:"varint,8,opt,name=rank,proto3" json:"rank,omitempty"`
	Status               int64    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupUpdateReq) Reset()         { *m = GroupUpdateReq{} }
func (m *GroupUpdateReq) String() string { return proto.CompactTextString(m) }
func (*GroupUpdateReq) ProtoMessage()    {}
func (*GroupUpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{21}
}

func (m *GroupUpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupUpdateReq.Unmarshal(m, b)
}
func (m *GroupUpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupUpdateReq.Marshal(b, m, deterministic)
}
func (m *GroupUpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupUpdateReq.Merge(m, src)
}
func (m *GroupUpdateReq) XXX_Size() int {
	return xxx_messageInfo_GroupUpdateReq.Size(m)
}
func (m *GroupUpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupUpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupUpdateReq proto.InternalMessageInfo

func (m *GroupUpdateReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GroupUpdateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GroupUpdateReq) GetCreateUser() int64 {
	if m != nil {
		return m.CreateUser
	}
	return 0
}

func (m *GroupUpdateReq) GetIco() string {
	if m != nil {
		return m.Ico
	}
	return ""
}

func (m *GroupUpdateReq) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *GroupUpdateReq) GetParentId() int64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *GroupUpdateReq) GetGroupType() int64 {
	if m != nil {
		return m.GroupType
	}
	return 0
}

func (m *GroupUpdateReq) GetRank() int64 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *GroupUpdateReq) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

// 批量删除群组
type GroupBatchDelReq struct {
	GroupIds             []int64  `protobuf:"varint,1,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupBatchDelReq) Reset()         { *m = GroupBatchDelReq{} }
func (m *GroupBatchDelReq) String() string { return proto.CompactTextString(m) }
func (*GroupBatchDelReq) ProtoMessage()    {}
func (*GroupBatchDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{22}
}

func (m *GroupBatchDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupBatchDelReq.Unmarshal(m, b)
}
func (m *GroupBatchDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupBatchDelReq.Marshal(b, m, deterministic)
}
func (m *GroupBatchDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupBatchDelReq.Merge(m, src)
}
func (m *GroupBatchDelReq) XXX_Size() int {
	return xxx_messageInfo_GroupBatchDelReq.Size(m)
}
func (m *GroupBatchDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupBatchDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_GroupBatchDelReq proto.InternalMessageInfo

func (m *GroupBatchDelReq) GetGroupIds() []int64 {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

// 加入群组
type UserAddGroupReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId              int64    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAddGroupReq) Reset()         { *m = UserAddGroupReq{} }
func (m *UserAddGroupReq) String() string { return proto.CompactTextString(m) }
func (*UserAddGroupReq) ProtoMessage()    {}
func (*UserAddGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{23}
}

func (m *UserAddGroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAddGroupReq.Unmarshal(m, b)
}
func (m *UserAddGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAddGroupReq.Marshal(b, m, deterministic)
}
func (m *UserAddGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAddGroupReq.Merge(m, src)
}
func (m *UserAddGroupReq) XXX_Size() int {
	return xxx_messageInfo_UserAddGroupReq.Size(m)
}
func (m *UserAddGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAddGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserAddGroupReq proto.InternalMessageInfo

func (m *UserAddGroupReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserAddGroupReq) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

// 退出群组
type UserExitGroupReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId              int64    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserExitGroupReq) Reset()         { *m = UserExitGroupReq{} }
func (m *UserExitGroupReq) String() string { return proto.CompactTextString(m) }
func (*UserExitGroupReq) ProtoMessage()    {}
func (*UserExitGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{24}
}

func (m *UserExitGroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExitGroupReq.Unmarshal(m, b)
}
func (m *UserExitGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExitGroupReq.Marshal(b, m, deterministic)
}
func (m *UserExitGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExitGroupReq.Merge(m, src)
}
func (m *UserExitGroupReq) XXX_Size() int {
	return xxx_messageInfo_UserExitGroupReq.Size(m)
}
func (m *UserExitGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExitGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserExitGroupReq proto.InternalMessageInfo

func (m *UserExitGroupReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserExitGroupReq) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

// --------------------------------------------------------------------------------------------------------
type GetUserConnectListReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Offset               int64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserConnectListReq) Reset()         { *m = GetUserConnectListReq{} }
func (m *GetUserConnectListReq) String() string { return proto.CompactTextString(m) }
func (*GetUserConnectListReq) ProtoMessage()    {}
func (*GetUserConnectListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{25}
}

func (m *GetUserConnectListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserConnectListReq.Unmarshal(m, b)
}
func (m *GetUserConnectListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserConnectListReq.Marshal(b, m, deterministic)
}
func (m *GetUserConnectListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserConnectListReq.Merge(m, src)
}
func (m *GetUserConnectListReq) XXX_Size() int {
	return xxx_messageInfo_GetUserConnectListReq.Size(m)
}
func (m *GetUserConnectListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserConnectListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserConnectListReq proto.InternalMessageInfo

func (m *GetUserConnectListReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetUserConnectListReq) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetUserConnectListReq) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ConnectItem struct {
	UserId               int64    `protobuf:"varint,1,opt,name=User_id,json=UserId,proto3" json:"User_id,omitempty"`
	DeviceId             string   `protobuf:"bytes,2,opt,name=Device_id,json=DeviceId,proto3" json:"Device_id,omitempty"`
	ServerIp             string   `protobuf:"bytes,3,opt,name=Server_ip,json=ServerIp,proto3" json:"Server_ip,omitempty"`
	ConnectIp            string   `protobuf:"bytes,4,opt,name=Connect_ip,json=ConnectIp,proto3" json:"Connect_ip,omitempty"`
	RegisterTime         string   `protobuf:"bytes,5,opt,name=Register_time,json=RegisterTime,proto3" json:"Register_time,omitempty"`
	HeartbeatTime        string   `protobuf:"bytes,6,opt,name=Heartbeat_time,json=HeartbeatTime,proto3" json:"Heartbeat_time,omitempty"`
	UnRegisterTime       string   `protobuf:"bytes,7,opt,name=UnRegister_time,json=UnRegisterTime,proto3" json:"UnRegister_time,omitempty"`
	DeviceInfo           string   `protobuf:"bytes,8,opt,name=Device_info,json=DeviceInfo,proto3" json:"Device_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectItem) Reset()         { *m = ConnectItem{} }
func (m *ConnectItem) String() string { return proto.CompactTextString(m) }
func (*ConnectItem) ProtoMessage()    {}
func (*ConnectItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{26}
}

func (m *ConnectItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectItem.Unmarshal(m, b)
}
func (m *ConnectItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectItem.Marshal(b, m, deterministic)
}
func (m *ConnectItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectItem.Merge(m, src)
}
func (m *ConnectItem) XXX_Size() int {
	return xxx_messageInfo_ConnectItem.Size(m)
}
func (m *ConnectItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectItem.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectItem proto.InternalMessageInfo

func (m *ConnectItem) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ConnectItem) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *ConnectItem) GetServerIp() string {
	if m != nil {
		return m.ServerIp
	}
	return ""
}

func (m *ConnectItem) GetConnectIp() string {
	if m != nil {
		return m.ConnectIp
	}
	return ""
}

func (m *ConnectItem) GetRegisterTime() string {
	if m != nil {
		return m.RegisterTime
	}
	return ""
}

func (m *ConnectItem) GetHeartbeatTime() string {
	if m != nil {
		return m.HeartbeatTime
	}
	return ""
}

func (m *ConnectItem) GetUnRegisterTime() string {
	if m != nil {
		return m.UnRegisterTime
	}
	return ""
}

func (m *ConnectItem) GetDeviceInfo() string {
	if m != nil {
		return m.DeviceInfo
	}
	return ""
}

type UserConnectListResp struct {
	UserConnectList      []*ConnectItem `protobuf:"bytes,1,rep,name=user_connect_list,json=userConnectList,proto3" json:"user_connect_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UserConnectListResp) Reset()         { *m = UserConnectListResp{} }
func (m *UserConnectListResp) String() string { return proto.CompactTextString(m) }
func (*UserConnectListResp) ProtoMessage()    {}
func (*UserConnectListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{27}
}

func (m *UserConnectListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserConnectListResp.Unmarshal(m, b)
}
func (m *UserConnectListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserConnectListResp.Marshal(b, m, deterministic)
}
func (m *UserConnectListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserConnectListResp.Merge(m, src)
}
func (m *UserConnectListResp) XXX_Size() int {
	return xxx_messageInfo_UserConnectListResp.Size(m)
}
func (m *UserConnectListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserConnectListResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserConnectListResp proto.InternalMessageInfo

func (m *UserConnectListResp) GetUserConnectList() []*ConnectItem {
	if m != nil {
		return m.UserConnectList
	}
	return nil
}

type ConnectUid struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectUid) Reset()         { *m = ConnectUid{} }
func (m *ConnectUid) String() string { return proto.CompactTextString(m) }
func (*ConnectUid) ProtoMessage()    {}
func (*ConnectUid) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{28}
}

func (m *ConnectUid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectUid.Unmarshal(m, b)
}
func (m *ConnectUid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectUid.Marshal(b, m, deterministic)
}
func (m *ConnectUid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectUid.Merge(m, src)
}
func (m *ConnectUid) XXX_Size() int {
	return xxx_messageInfo_ConnectUid.Size(m)
}
func (m *ConnectUid) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectUid.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectUid proto.InternalMessageInfo

func (m *ConnectUid) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ConnectUid) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func init() {
	proto.RegisterType((*NullResp)(nil), "chat.NullResp")
	proto.RegisterType((*GetsQueryItem)(nil), "chat.GetsQueryItem")
	proto.RegisterType((*GetsReq)(nil), "chat.GetsReq")
	proto.RegisterType((*FriendItem)(nil), "chat.FriendItem")
	proto.RegisterType((*AddFriendReq)(nil), "chat.AddFriendReq")
	proto.RegisterType((*BatchChangeFriendRelationReq)(nil), "chat.BatchChangeFriendRelationReq")
	proto.RegisterType((*FriendGetsResp)(nil), "chat.FriendGetsResp")
	proto.RegisterType((*SendOneMsgReq)(nil), "chat.SendOneMsgReq")
	proto.RegisterType((*At)(nil), "chat.At")
	proto.RegisterType((*SendManyMsgReq)(nil), "chat.SendManyMsgReq")
	proto.RegisterType((*AckMsgReq)(nil), "chat.AckMsgReq")
	proto.RegisterType((*SyncMsgReq)(nil), "chat.SyncMsgReq")
	proto.RegisterType((*SingleMsgItem)(nil), "chat.SingleMsgItem")
	proto.RegisterType((*GroupMsgItem)(nil), "chat.GroupMsgItem")
	proto.RegisterType((*SyncMsgResp)(nil), "chat.SyncMsgResp")
	proto.RegisterType((*WithdrawMsgReq)(nil), "chat.WithdrawMsgReq")
	proto.RegisterType((*BatchDelMsgReq)(nil), "chat.BatchDelMsgReq")
	proto.RegisterType((*GroupItem)(nil), "chat.GroupItem")
	proto.RegisterType((*GroupGetReq)(nil), "chat.GroupGetReq")
	proto.RegisterType((*GroupGetsResp)(nil), "chat.GroupGetsResp")
	proto.RegisterType((*GroupAddReq)(nil), "chat.GroupAddReq")
	proto.RegisterType((*GroupUpdateReq)(nil), "chat.GroupUpdateReq")
	proto.RegisterType((*GroupBatchDelReq)(nil), "chat.GroupBatchDelReq")
	proto.RegisterType((*UserAddGroupReq)(nil), "chat.UserAddGroupReq")
	proto.RegisterType((*UserExitGroupReq)(nil), "chat.UserExitGroupReq")
	proto.RegisterType((*GetUserConnectListReq)(nil), "chat.GetUserConnectListReq")
	proto.RegisterType((*ConnectItem)(nil), "chat.ConnectItem")
	proto.RegisterType((*UserConnectListResp)(nil), "chat.UserConnectListResp")
	proto.RegisterType((*ConnectUid)(nil), "chat.ConnectUid")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54) }

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 1688 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x58, 0xcd, 0x6e, 0x1b, 0x47,
	0x12, 0x06, 0x87, 0x14, 0x7f, 0x8a, 0x22, 0x25, 0xb5, 0xff, 0x28, 0x79, 0xfd, 0xb3, 0xb3, 0x5e,
	0xac, 0x0c, 0xec, 0xca, 0xb0, 0x0d, 0xef, 0x62, 0x0f, 0x0b, 0x2c, 0x25, 0xd9, 0x32, 0xb1, 0x6b,
	0x2b, 0x19, 0x59, 0xce, 0x2d, 0x42, 0x8b, 0xd3, 0xa4, 0x26, 0x1a, 0xcd, 0x8c, 0x66, 0x9a, 0xb6,
	0x95, 0x53, 0x10, 0x04, 0x48, 0x6e, 0xc9, 0x21, 0x01, 0x72, 0xce, 0x3b, 0xe4, 0x96, 0x87, 0xc8,
	0x5b, 0xe4, 0x98, 0x57, 0x08, 0xba, 0xaa, 0x9b, 0x33, 0xc3, 0xe1, 0x8f, 0x91, 0x20, 0x40, 0x90,
	0xdc, 0xa6, 0xab, 0xab, 0xab, 0xab, 0xeb, 0xfb, 0xba, 0xaa, 0x7a, 0x00, 0xfa, 0x27, 0x5c, 0x6e,
	0x45, 0x71, 0x28, 0x43, 0x56, 0x51, 0xdf, 0x36, 0x40, 0xfd, 0xf9, 0xc8, 0xf7, 0x1d, 0x91, 0x44,
	0xf6, 0x29, 0xb4, 0xf6, 0x84, 0x4c, 0xde, 0x1d, 0x89, 0xf8, 0xa2, 0x27, 0xc5, 0x19, 0x5b, 0x85,
	0xf2, 0xff, 0xc4, 0x45, 0xa7, 0x74, 0xbb, 0xb4, 0xd9, 0x70, 0xd4, 0xa7, 0x92, 0xbc, 0xe4, 0x7e,
	0xc7, 0x22, 0xc9, 0x4b, 0xee, 0xb3, 0xab, 0x50, 0x7d, 0xca, 0x03, 0xd7, 0x17, 0x9d, 0x32, 0x0a,
	0xf5, 0x88, 0xdd, 0x04, 0x78, 0x2e, 0xde, 0x48, 0x3d, 0x57, 0xc1, 0xb9, 0x8c, 0xc4, 0xfe, 0xba,
	0x04, 0x35, 0xb5, 0x9b, 0x23, 0xce, 0xd9, 0x5d, 0x58, 0xc2, 0x4d, 0x3b, 0xa5, 0xdb, 0xe5, 0xcd,
	0xe6, 0x83, 0x4b, 0x5b, 0xe8, 0x66, 0xce, 0x17, 0x87, 0x34, 0x58, 0x07, 0x6a, 0xfb, 0xb1, 0x2b,
	0xe2, 0xed, 0x0b, 0xed, 0x84, 0x19, 0x32, 0x06, 0x95, 0x83, 0x30, 0x96, 0xda, 0x0d, 0xfc, 0x56,
	0xda, 0x3b, 0xa3, 0x38, 0x16, 0x81, 0x44, 0x0f, 0xca, 0x8e, 0x19, 0xb2, 0x0d, 0xa8, 0xbf, 0xc3,
	0x87, 0xe2, 0xc0, 0xfb, 0x50, 0x74, 0x96, 0x70, 0x6a, 0x3c, 0xb6, 0xbf, 0xb0, 0x00, 0x9e, 0xc4,
	0x9e, 0x08, 0x5c, 0x8c, 0x42, 0x1b, 0x2c, 0xcf, 0xc5, 0x20, 0x94, 0x1d, 0xcb, 0x73, 0xd9, 0x0d,
	0x00, 0x1e, 0x45, 0xfe, 0xc5, 0xd1, 0x28, 0x11, 0x31, 0x7a, 0x51, 0x76, 0x1a, 0x28, 0x39, 0x4c,
	0x44, 0xcc, 0xfe, 0x0c, 0xcb, 0x34, 0xed, 0x8a, 0x57, 0x5e, 0xdf, 0x84, 0xa5, 0x89, 0xb2, 0x5d,
	0x14, 0xb1, 0x5b, 0xd0, 0xe4, 0xfd, 0xbe, 0x88, 0x24, 0x99, 0x20, 0xd7, 0x80, 0x44, 0x79, 0x1b,
	0xb1, 0xe0, 0x49, 0x18, 0xa0, 0x87, 0xc6, 0x86, 0x83, 0x22, 0x76, 0x19, 0x96, 0xc4, 0x1b, 0x19,
	0xf3, 0x4e, 0x15, 0xe7, 0x68, 0xa0, 0xd0, 0x48, 0x24, 0x97, 0xa3, 0xa4, 0x53, 0x43, 0xa3, 0x7a,
	0xa4, 0xd0, 0xe8, 0xc7, 0x82, 0x4b, 0xf1, 0xc2, 0x3b, 0x13, 0x9d, 0x3a, 0xa1, 0x91, 0x4a, 0xd4,
	0xfc, 0x28, 0x72, 0xcd, 0x7c, 0x83, 0xe6, 0x53, 0x89, 0xfd, 0x65, 0x09, 0x96, 0xbb, 0xae, 0x4b,
	0x51, 0x51, 0x90, 0xe5, 0x83, 0x50, 0x5a, 0x14, 0x04, 0x6b, 0x61, 0x10, 0xca, 0x0b, 0x83, 0x50,
	0x29, 0x04, 0xc1, 0xee, 0xc3, 0x9f, 0xb6, 0xb9, 0xec, 0x9f, 0xec, 0x9c, 0xf0, 0x60, 0x28, 0x8c,
	0x77, 0x3e, 0x97, 0x5e, 0x18, 0x68, 0x2f, 0x07, 0x28, 0x3c, 0xf2, 0xdc, 0x04, 0xd9, 0x55, 0x76,
	0x1a, 0x24, 0xe9, 0xb9, 0x09, 0xbb, 0x03, 0xad, 0x30, 0x12, 0x31, 0xaa, 0xbf, 0xb8, 0x88, 0x84,
	0x06, 0x33, 0x2f, 0xb4, 0x3f, 0x29, 0x41, 0x9b, 0x4c, 0x13, 0x5f, 0x93, 0x88, 0xdd, 0x81, 0x8a,
	0xef, 0x25, 0x52, 0xf3, 0x75, 0x95, 0xf8, 0x9a, 0x52, 0xc6, 0xc1, 0x59, 0xc5, 0xbe, 0xbe, 0x66,
	0x1f, 0x19, 0x36, 0x43, 0xc5, 0xbe, 0xc8, 0xb0, 0x8f, 0x0e, 0x3e, 0x1e, 0x2b, 0x08, 0xbd, 0x44,
	0x5d, 0x14, 0x3c, 0x70, 0xdd, 0xd1, 0x23, 0xfb, 0x5b, 0x0b, 0x5a, 0x07, 0x22, 0x70, 0xf7, 0x03,
	0xf1, 0x2c, 0x19, 0xaa, 0xd3, 0xdd, 0x82, 0x66, 0x22, 0x02, 0x57, 0xc4, 0x47, 0x52, 0x39, 0x4f,
	0xd7, 0x14, 0x48, 0xa4, 0x3c, 0x67, 0xd7, 0xa1, 0xa1, 0x15, 0x3c, 0x57, 0xbb, 0x50, 0x27, 0x41,
	0xcf, 0x65, 0x9b, 0xb0, 0xaa, 0x27, 0x09, 0x23, 0xa5, 0x43, 0x5c, 0x6d, 0x93, 0x9c, 0x70, 0xea,
	0xb9, 0x6a, 0x9f, 0x58, 0xf4, 0x85, 0xf7, 0x8a, 0x0c, 0x69, 0xba, 0x1a, 0x51, 0xcf, 0x65, 0x7f,
	0x07, 0x36, 0x56, 0x48, 0x8d, 0x11, 0x69, 0x57, 0xcd, 0xcc, 0xd8, 0xdc, 0x75, 0x68, 0x44, 0x5c,
	0x85, 0x41, 0x29, 0x55, 0xcd, 0xe9, 0x95, 0x80, 0x26, 0xd5, 0xee, 0x47, 0x52, 0xf1, 0xb0, 0x86,
	0x16, 0xd0, 0x65, 0x64, 0xe9, 0x3a, 0xd4, 0xcf, 0x92, 0x21, 0x9d, 0x96, 0x38, 0x5c, 0x3b, 0x4b,
	0x86, 0x78, 0x54, 0x15, 0xeb, 0x30, 0x90, 0x2a, 0xd6, 0xc4, 0x5e, 0x33, 0xb4, 0xff, 0x0b, 0x56,
	0x57, 0x45, 0xbc, 0xe1, 0x25, 0x47, 0x5c, 0x1e, 0x71, 0xdf, 0xc7, 0x48, 0xd5, 0x9d, 0x9a, 0x97,
	0x74, 0x65, 0xd7, 0xf7, 0xd9, 0x4d, 0x68, 0x72, 0x62, 0x21, 0xd2, 0xc4, 0x22, 0x9a, 0x70, 0x64,
	0x61, 0xcf, 0x4d, 0xec, 0xef, 0x2d, 0x68, 0xab, 0xc8, 0x3f, 0xe3, 0xc1, 0xc5, 0x1f, 0x35, 0xf4,
	0x1d, 0xb0, 0xb8, 0xc4, 0xa0, 0x37, 0x1f, 0xd4, 0x89, 0xef, 0x5d, 0xe9, 0x58, 0x5c, 0xe6, 0x40,
	0x69, 0xcc, 0x04, 0x05, 0xf2, 0xa0, 0x7c, 0x5e, 0x82, 0x46, 0xb7, 0x7f, 0xaa, 0xa3, 0x79, 0x0d,
	0x6a, 0x3a, 0xfa, 0x3a, 0x93, 0x54, 0x47, 0x18, 0x7a, 0xe5, 0x52, 0x7a, 0x28, 0xca, 0x21, 0x75,
	0xd7, 0x1c, 0xe6, 0x26, 0x40, 0x78, 0xfc, 0x81, 0xe8, 0x4b, 0xbc, 0xba, 0x14, 0xbf, 0x8c, 0x44,
	0x5d, 0x32, 0x1a, 0xf5, 0x4c, 0xe0, 0xc6, 0x63, 0x55, 0xc7, 0x12, 0x71, 0xae, 0x33, 0xbf, 0xfa,
	0xb4, 0x03, 0x80, 0x83, 0x8b, 0xa0, 0xaf, 0x3d, 0xba, 0x01, 0x90, 0x78, 0xc1, 0xd0, 0x17, 0x47,
	0x4a, 0x4d, 0xa7, 0x37, 0x92, 0x1c, 0x88, 0x73, 0xe5, 0xd7, 0x30, 0x0e, 0x47, 0x11, 0xce, 0x6a,
	0x74, 0x51, 0xa0, 0x26, 0x0b, 0x59, 0x85, 0x5c, 0x9b, 0xc8, 0x2a, 0x3f, 0xaa, 0xeb, 0x8c, 0x06,
	0x9f, 0x25, 0xc3, 0xa9, 0x75, 0x66, 0x82, 0x63, 0xd6, 0x7c, 0x8e, 0x95, 0xdf, 0x82, 0x63, 0x95,
	0xb7, 0xe1, 0xd8, 0x52, 0x81, 0x63, 0x59, 0x84, 0xab, 0x33, 0x11, 0xae, 0xe5, 0x10, 0xce, 0x53,
	0xad, 0x3e, 0x8f, 0x6a, 0x8d, 0x09, 0xaa, 0xa5, 0x35, 0x0c, 0xe6, 0xd4, 0xb0, 0xe6, 0x82, 0x1a,
	0xb6, 0x5c, 0xa8, 0x61, 0x9f, 0x95, 0x61, 0x79, 0x4f, 0x81, 0xf4, 0x9b, 0x0f, 0x38, 0x5d, 0xb6,
	0xea, 0x82, 0xcb, 0x56, 0x9b, 0x09, 0x45, 0x7d, 0x0e, 0x14, 0x8d, 0x79, 0x50, 0xc0, 0x4c, 0x28,
	0x9a, 0x73, 0xa0, 0x58, 0x5e, 0x00, 0x45, 0xab, 0x00, 0xc5, 0x47, 0x25, 0x68, 0x8e, 0x6f, 0x5b,
	0x12, 0xb1, 0x7f, 0x67, 0xee, 0xc2, 0xff, 0xd3, 0xc2, 0xaa, 0x1b, 0xc1, 0xdc, 0x35, 0x71, 0xf2,
	0x9a, 0xec, 0x9f, 0x29, 0xa8, 0xb8, 0xd2, 0xc2, 0x95, 0x4c, 0xb7, 0x90, 0x19, 0xb8, 0x9d, 0x9c,
	0x9e, 0xbd, 0x0d, 0xed, 0xf7, 0x3c, 0x79, 0xe2, 0xc6, 0xfc, 0xb5, 0xbe, 0xf3, 0x3a, 0x27, 0x94,
	0xc6, 0x39, 0x61, 0x22, 0xc3, 0x58, 0x93, 0x19, 0xc6, 0xde, 0x85, 0x36, 0xb6, 0x1f, 0xbb, 0xc2,
	0xd7, 0x36, 0x18, 0x54, 0x12, 0x71, 0x6e, 0x5a, 0x0d, 0xfc, 0x5e, 0x68, 0xe5, 0x1b, 0x0b, 0x1a,
	0xe8, 0xda, 0x54, 0x52, 0x32, 0xa8, 0x04, 0xfc, 0xcc, 0xac, 0xc3, 0x6f, 0x45, 0x20, 0x0a, 0x76,
	0xae, 0x75, 0x22, 0x11, 0xb6, 0x4e, 0xab, 0x50, 0xf6, 0xfa, 0xa1, 0xa6, 0x9f, 0xfa, 0x54, 0x48,
	0xc6, 0xe2, 0x8c, 0xc7, 0xa7, 0xba, 0x36, 0xe8, 0xd1, 0xfc, 0x8a, 0x70, 0x03, 0x80, 0xd2, 0xdc,
	0x98, 0x6f, 0x65, 0x87, 0x12, 0x1f, 0x32, 0x8e, 0x41, 0x25, 0xe6, 0xc1, 0xa9, 0xbe, 0xdd, 0xf8,
	0x9d, 0x61, 0x4c, 0x63, 0x0e, 0x63, 0x60, 0x01, 0x63, 0x9a, 0x05, 0xc6, 0x6c, 0x42, 0x13, 0x63,
	0xb4, 0x27, 0xa4, 0x8a, 0xf3, 0x3a, 0x50, 0xbe, 0x4d, 0x4b, 0x46, 0x0d, 0xc7, 0x3d, 0xd7, 0xfe,
	0xb8, 0x04, 0x2d, 0xa3, 0x4a, 0xdd, 0xda, 0x5f, 0x72, 0xdd, 0xda, 0x4a, 0x86, 0x1a, 0xbf, 0x5a,
	0xb3, 0xf6, 0x5d, 0x49, 0xfb, 0xdb, 0x75, 0x5d, 0xcd, 0x0b, 0x44, 0xb1, 0x34, 0x1b, 0x45, 0x6b,
	0x16, 0x8a, 0xe5, 0x69, 0x28, 0x56, 0x66, 0xa3, 0xb8, 0x34, 0x17, 0xc5, 0xea, 0x2c, 0x14, 0x6b,
	0x29, 0x8a, 0xf6, 0x0f, 0x25, 0x68, 0xa3, 0xfb, 0x87, 0x88, 0x80, 0x3a, 0xc1, 0xef, 0x93, 0x97,
	0xf6, 0x3d, 0x58, 0xc5, 0x83, 0x9a, 0x7b, 0xec, 0x64, 0xab, 0x7b, 0xfa, 0x68, 0xa8, 0x6b, 0x76,
	0x25, 0xf6, 0x63, 0x58, 0x51, 0x47, 0xe9, 0xba, 0x2e, 0xae, 0x9b, 0xdb, 0xbe, 0x64, 0x59, 0x6a,
	0xe5, 0x59, 0xfa, 0x04, 0x56, 0x95, 0x99, 0xc7, 0x6f, 0x3c, 0xf9, 0x8b, 0xec, 0xbc, 0x0f, 0x57,
	0xf6, 0x04, 0x76, 0xaa, 0x3b, 0x61, 0x10, 0x88, 0xbe, 0x54, 0xc9, 0x6d, 0xae, 0xb1, 0xab, 0x50,
	0x0d, 0x07, 0x83, 0x44, 0x18, 0x9e, 0xeb, 0x91, 0x7a, 0x50, 0xfa, 0xde, 0x99, 0x27, 0x35, 0x6c,
	0x34, 0xb0, 0xbf, 0xb2, 0xa0, 0xa9, 0x2d, 0x63, 0x7a, 0xba, 0x06, 0xb5, 0xc3, 0xbc, 0xd9, 0xc3,
	0x71, 0xab, 0xb6, 0x3b, 0xd9, 0xaa, 0x65, 0xfb, 0xce, 0x03, 0x11, 0x63, 0xbd, 0x8b, 0x34, 0x9f,
	0xeb, 0x24, 0xe8, 0x45, 0x0a, 0x4d, 0xbd, 0x83, 0x9a, 0x25, 0x6e, 0x34, 0xcc, 0x9e, 0xea, 0xf6,
	0xb6, 0x1c, 0x31, 0xf4, 0x12, 0xa9, 0xea, 0xb2, 0x4a, 0x0e, 0x44, 0x94, 0x65, 0x23, 0xc4, 0xf4,
	0xf1, 0x57, 0x68, 0x3f, 0x15, 0x3c, 0x96, 0xc7, 0x82, 0x4b, 0xd2, 0xa2, 0x46, 0xa5, 0x35, 0x96,
	0xa2, 0xda, 0xdf, 0x60, 0xe5, 0x30, 0xc8, 0x5b, 0xa3, 0x2a, 0xda, 0x4e, 0xc5, 0xa8, 0x78, 0x0b,
	0x9a, 0xe6, 0x34, 0xc1, 0x20, 0x34, 0x0f, 0x66, 0x7d, 0x9e, 0x60, 0x10, 0xda, 0x2f, 0xe0, 0x52,
	0x21, 0xe8, 0x49, 0xc4, 0xfe, 0x03, 0x6b, 0x18, 0xf5, 0xbe, 0x3e, 0x50, 0x26, 0xef, 0xac, 0x51,
	0xde, 0xc9, 0x04, 0xd3, 0x59, 0x19, 0xe5, 0x4d, 0xd8, 0xdb, 0xe3, 0x50, 0x1c, 0x7a, 0xee, 0xcf,
	0x6b, 0x8b, 0x1f, 0x7c, 0x5a, 0x87, 0xca, 0xce, 0x09, 0x97, 0xec, 0x1e, 0x34, 0xb8, 0x79, 0xb2,
	0x33, 0x5d, 0x10, 0xb3, 0x6f, 0xf8, 0x8d, 0x36, 0xc9, 0xcc, 0xff, 0x1f, 0xb6, 0x0f, 0xeb, 0xc7,
	0xb3, 0x5e, 0xd3, 0xcc, 0x26, 0xe5, 0x79, 0xcf, 0xed, 0x82, 0xc1, 0xfb, 0xe6, 0xf9, 0xad, 0x52,
	0x31, 0x6b, 0xa5, 0xbf, 0x75, 0x94, 0xf2, 0xe5, 0xec, 0xab, 0x79, 0x9c, 0xab, 0xef, 0x03, 0x36,
	0x5c, 0xf4, 0xc8, 0x65, 0xa6, 0x01, 0xc8, 0x3e, 0x7b, 0x0b, 0xbb, 0x3c, 0xa4, 0xb6, 0x4d, 0xbf,
	0xce, 0xd8, 0xe5, 0x74, 0x4d, 0xfa, 0x60, 0x2b, 0x2c, 0xba, 0x0b, 0x55, 0x8e, 0xef, 0x0f, 0xa6,
	0xeb, 0xc1, 0xf8, 0x35, 0x52, 0x50, 0xdd, 0x82, 0x5a, 0x42, 0xbd, 0x0a, 0xd3, 0x2f, 0xfd, 0xf4,
	0xa1, 0xb0, 0xb1, 0x36, 0x21, 0x21, 0x7f, 0x5e, 0xa7, 0x9d, 0x85, 0xf1, 0x27, 0xdf, 0x6c, 0x4c,
	0x3b, 0xc4, 0x71, 0xda, 0x4a, 0x98, 0x45, 0xf9, 0xee, 0x62, 0x8a, 0x67, 0x94, 0x17, 0xf6, 0x84,
	0x64, 0x6b, 0x99, 0xb2, 0x46, 0x45, 0x72, 0x63, 0xb2, 0xd2, 0x29, 0x46, 0x18, 0xfd, 0x02, 0x1c,
	0x97, 0xf2, 0xeb, 0x09, 0x8d, 0x7f, 0xe8, 0x0d, 0xba, 0xae, 0x9b, 0xdb, 0x80, 0xaa, 0xda, 0xb4,
	0x43, 0x0c, 0xd3, 0xaa, 0x61, 0x0e, 0x91, 0x2f, 0x24, 0x85, 0x45, 0xff, 0x82, 0xd6, 0x30, 0x9b,
	0x81, 0xd9, 0xd5, 0xcc, 0xb2, 0x4c, 0x5a, 0x2e, 0x2c, 0x7c, 0x04, 0xcb, 0xa3, 0x4c, 0x26, 0x66,
	0x57, 0x68, 0x7e, 0x22, 0x3b, 0x4f, 0xdb, 0x6f, 0x94, 0xcd, 0xbc, 0x66, 0xbf, 0xc9, 0x74, 0x5c,
	0x58, 0xf8, 0x14, 0xda, 0x43, 0x21, 0xf7, 0x03, 0xdf, 0x0b, 0xb0, 0x9a, 0x25, 0xec, 0xfa, 0x38,
	0x84, 0xc5, 0x04, 0xbc, 0xb1, 0x9e, 0x9a, 0x9d, 0xcc, 0x12, 0x8f, 0xd0, 0x92, 0xc9, 0x04, 0xc1,
	0x20, 0x34, 0xc4, 0x4a, 0x2f, 0xff, 0x46, 0x31, 0x5d, 0xb0, 0x2d, 0x80, 0x70, 0x30, 0xd0, 0x92,
	0x29, 0x4b, 0x26, 0x1c, 0x3e, 0xae, 0xe2, 0x8f, 0xde, 0x87, 0x3f, 0x05, 0x00, 0x00, 0xff, 0xff,
	0xd3, 0x9a, 0x33, 0xd9, 0xf6, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	AddFriend(ctx context.Context, in *AddFriendReq, opts ...grpc.CallOption) (*NullResp, error)
	BatchChangeFriendRelation(ctx context.Context, in *BatchChangeFriendRelationReq, opts ...grpc.CallOption) (*NullResp, error)
	FriendGets(ctx context.Context, in *GetsReq, opts ...grpc.CallOption) (*FriendGetsResp, error)
	SendOneMsg(ctx context.Context, in *SendOneMsgReq, opts ...grpc.CallOption) (*NullResp, error)
	SendManyMsg(ctx context.Context, in *SendManyMsgReq, opts ...grpc.CallOption) (*NullResp, error)
	AckMsg(ctx context.Context, in *AckMsgReq, opts ...grpc.CallOption) (*NullResp, error)
	SyncMsg(ctx context.Context, in *SyncMsgReq, opts ...grpc.CallOption) (*SyncMsgResp, error)
	WithdrawMsg(ctx context.Context, in *WithdrawMsgReq, opts ...grpc.CallOption) (*NullResp, error)
	BatchDelMsg(ctx context.Context, in *BatchDelMsgReq, opts ...grpc.CallOption) (*NullResp, error)
	// --------------------------------------------------------------------------------------------------------
	// 群组
	GroupGet(ctx context.Context, in *GroupGetReq, opts ...grpc.CallOption) (*GroupItem, error)
	GroupGets(ctx context.Context, in *GetsReq, opts ...grpc.CallOption) (*GroupGetsResp, error)
	GroupAdd(ctx context.Context, in *GroupAddReq, opts ...grpc.CallOption) (*NullResp, error)
	GroupUpdate(ctx context.Context, in *GroupUpdateReq, opts ...grpc.CallOption) (*NullResp, error)
	GroupBatchDel(ctx context.Context, in *GroupBatchDelReq, opts ...grpc.CallOption) (*NullResp, error)
	// 用户群组关系
	UserAddGroup(ctx context.Context, in *UserAddGroupReq, opts ...grpc.CallOption) (*NullResp, error)
	UserExitGroup(ctx context.Context, in *UserExitGroupReq, opts ...grpc.CallOption) (*NullResp, error)
	// --------------------------------------------------------------------------------------------------------
	GetOnlineUsers(ctx context.Context, in *GetUserConnectListReq, opts ...grpc.CallOption) (*UserConnectListResp, error)
	GetConnectInfo(ctx context.Context, in *ConnectUid, opts ...grpc.CallOption) (*ConnectItem, error)
	OffConnect(ctx context.Context, in *ConnectUid, opts ...grpc.CallOption) (*NullResp, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) AddFriend(ctx context.Context, in *AddFriendReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/addFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) BatchChangeFriendRelation(ctx context.Context, in *BatchChangeFriendRelationReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/batchChangeFriendRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) FriendGets(ctx context.Context, in *GetsReq, opts ...grpc.CallOption) (*FriendGetsResp, error) {
	out := new(FriendGetsResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/friendGets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) SendOneMsg(ctx context.Context, in *SendOneMsgReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/sendOneMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) SendManyMsg(ctx context.Context, in *SendManyMsgReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/sendManyMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) AckMsg(ctx context.Context, in *AckMsgReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/ackMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) SyncMsg(ctx context.Context, in *SyncMsgReq, opts ...grpc.CallOption) (*SyncMsgResp, error) {
	out := new(SyncMsgResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/syncMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) WithdrawMsg(ctx context.Context, in *WithdrawMsgReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/withdrawMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) BatchDelMsg(ctx context.Context, in *BatchDelMsgReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/batchDelMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GroupGet(ctx context.Context, in *GroupGetReq, opts ...grpc.CallOption) (*GroupItem, error) {
	out := new(GroupItem)
	err := c.cc.Invoke(ctx, "/chat.Chat/groupGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GroupGets(ctx context.Context, in *GetsReq, opts ...grpc.CallOption) (*GroupGetsResp, error) {
	out := new(GroupGetsResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/groupGets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GroupAdd(ctx context.Context, in *GroupAddReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/groupAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GroupUpdate(ctx context.Context, in *GroupUpdateReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/groupUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GroupBatchDel(ctx context.Context, in *GroupBatchDelReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/groupBatchDel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) UserAddGroup(ctx context.Context, in *UserAddGroupReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/userAddGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) UserExitGroup(ctx context.Context, in *UserExitGroupReq, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/userExitGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetOnlineUsers(ctx context.Context, in *GetUserConnectListReq, opts ...grpc.CallOption) (*UserConnectListResp, error) {
	out := new(UserConnectListResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/getOnlineUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) GetConnectInfo(ctx context.Context, in *ConnectUid, opts ...grpc.CallOption) (*ConnectItem, error) {
	out := new(ConnectItem)
	err := c.cc.Invoke(ctx, "/chat.Chat/getConnectInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) OffConnect(ctx context.Context, in *ConnectUid, opts ...grpc.CallOption) (*NullResp, error) {
	out := new(NullResp)
	err := c.cc.Invoke(ctx, "/chat.Chat/offConnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	AddFriend(context.Context, *AddFriendReq) (*NullResp, error)
	BatchChangeFriendRelation(context.Context, *BatchChangeFriendRelationReq) (*NullResp, error)
	FriendGets(context.Context, *GetsReq) (*FriendGetsResp, error)
	SendOneMsg(context.Context, *SendOneMsgReq) (*NullResp, error)
	SendManyMsg(context.Context, *SendManyMsgReq) (*NullResp, error)
	AckMsg(context.Context, *AckMsgReq) (*NullResp, error)
	SyncMsg(context.Context, *SyncMsgReq) (*SyncMsgResp, error)
	WithdrawMsg(context.Context, *WithdrawMsgReq) (*NullResp, error)
	BatchDelMsg(context.Context, *BatchDelMsgReq) (*NullResp, error)
	// --------------------------------------------------------------------------------------------------------
	// 群组
	GroupGet(context.Context, *GroupGetReq) (*GroupItem, error)
	GroupGets(context.Context, *GetsReq) (*GroupGetsResp, error)
	GroupAdd(context.Context, *GroupAddReq) (*NullResp, error)
	GroupUpdate(context.Context, *GroupUpdateReq) (*NullResp, error)
	GroupBatchDel(context.Context, *GroupBatchDelReq) (*NullResp, error)
	// 用户群组关系
	UserAddGroup(context.Context, *UserAddGroupReq) (*NullResp, error)
	UserExitGroup(context.Context, *UserExitGroupReq) (*NullResp, error)
	// --------------------------------------------------------------------------------------------------------
	GetOnlineUsers(context.Context, *GetUserConnectListReq) (*UserConnectListResp, error)
	GetConnectInfo(context.Context, *ConnectUid) (*ConnectItem, error)
	OffConnect(context.Context, *ConnectUid) (*NullResp, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) AddFriend(ctx context.Context, req *AddFriendReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFriend not implemented")
}
func (*UnimplementedChatServer) BatchChangeFriendRelation(ctx context.Context, req *BatchChangeFriendRelationReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchChangeFriendRelation not implemented")
}
func (*UnimplementedChatServer) FriendGets(ctx context.Context, req *GetsReq) (*FriendGetsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FriendGets not implemented")
}
func (*UnimplementedChatServer) SendOneMsg(ctx context.Context, req *SendOneMsgReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendOneMsg not implemented")
}
func (*UnimplementedChatServer) SendManyMsg(ctx context.Context, req *SendManyMsgReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendManyMsg not implemented")
}
func (*UnimplementedChatServer) AckMsg(ctx context.Context, req *AckMsgReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AckMsg not implemented")
}
func (*UnimplementedChatServer) SyncMsg(ctx context.Context, req *SyncMsgReq) (*SyncMsgResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncMsg not implemented")
}
func (*UnimplementedChatServer) WithdrawMsg(ctx context.Context, req *WithdrawMsgReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawMsg not implemented")
}
func (*UnimplementedChatServer) BatchDelMsg(ctx context.Context, req *BatchDelMsgReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchDelMsg not implemented")
}
func (*UnimplementedChatServer) GroupGet(ctx context.Context, req *GroupGetReq) (*GroupItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupGet not implemented")
}
func (*UnimplementedChatServer) GroupGets(ctx context.Context, req *GetsReq) (*GroupGetsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupGets not implemented")
}
func (*UnimplementedChatServer) GroupAdd(ctx context.Context, req *GroupAddReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupAdd not implemented")
}
func (*UnimplementedChatServer) GroupUpdate(ctx context.Context, req *GroupUpdateReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupUpdate not implemented")
}
func (*UnimplementedChatServer) GroupBatchDel(ctx context.Context, req *GroupBatchDelReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GroupBatchDel not implemented")
}
func (*UnimplementedChatServer) UserAddGroup(ctx context.Context, req *UserAddGroupReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserAddGroup not implemented")
}
func (*UnimplementedChatServer) UserExitGroup(ctx context.Context, req *UserExitGroupReq) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserExitGroup not implemented")
}
func (*UnimplementedChatServer) GetOnlineUsers(ctx context.Context, req *GetUserConnectListReq) (*UserConnectListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnlineUsers not implemented")
}
func (*UnimplementedChatServer) GetConnectInfo(ctx context.Context, req *ConnectUid) (*ConnectItem, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConnectInfo not implemented")
}
func (*UnimplementedChatServer) OffConnect(ctx context.Context, req *ConnectUid) (*NullResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OffConnect not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_AddFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).AddFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/AddFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).AddFriend(ctx, req.(*AddFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_BatchChangeFriendRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchChangeFriendRelationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).BatchChangeFriendRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/BatchChangeFriendRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).BatchChangeFriendRelation(ctx, req.(*BatchChangeFriendRelationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_FriendGets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).FriendGets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/FriendGets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).FriendGets(ctx, req.(*GetsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_SendOneMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendOneMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SendOneMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/SendOneMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SendOneMsg(ctx, req.(*SendOneMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_SendManyMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendManyMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SendManyMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/SendManyMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SendManyMsg(ctx, req.(*SendManyMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_AckMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AckMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).AckMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/AckMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).AckMsg(ctx, req.(*AckMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_SyncMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SyncMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/SyncMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SyncMsg(ctx, req.(*SyncMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_WithdrawMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).WithdrawMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/WithdrawMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).WithdrawMsg(ctx, req.(*WithdrawMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_BatchDelMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchDelMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).BatchDelMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/BatchDelMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).BatchDelMsg(ctx, req.(*BatchDelMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GroupGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupGetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GroupGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/GroupGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GroupGet(ctx, req.(*GroupGetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GroupGets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GroupGets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/GroupGets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GroupGets(ctx, req.(*GetsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GroupAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GroupAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/GroupAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GroupAdd(ctx, req.(*GroupAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GroupUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GroupUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/GroupUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GroupUpdate(ctx, req.(*GroupUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GroupBatchDel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GroupBatchDelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GroupBatchDel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/GroupBatchDel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GroupBatchDel(ctx, req.(*GroupBatchDelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_UserAddGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAddGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).UserAddGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/UserAddGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).UserAddGroup(ctx, req.(*UserAddGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_UserExitGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserExitGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).UserExitGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/UserExitGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).UserExitGroup(ctx, req.(*UserExitGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetOnlineUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserConnectListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetOnlineUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/GetOnlineUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetOnlineUsers(ctx, req.(*GetUserConnectListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_GetConnectInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectUid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetConnectInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/GetConnectInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetConnectInfo(ctx, req.(*ConnectUid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_OffConnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectUid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).OffConnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/OffConnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).OffConnect(ctx, req.(*ConnectUid))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addFriend",
			Handler:    _Chat_AddFriend_Handler,
		},
		{
			MethodName: "batchChangeFriendRelation",
			Handler:    _Chat_BatchChangeFriendRelation_Handler,
		},
		{
			MethodName: "friendGets",
			Handler:    _Chat_FriendGets_Handler,
		},
		{
			MethodName: "sendOneMsg",
			Handler:    _Chat_SendOneMsg_Handler,
		},
		{
			MethodName: "sendManyMsg",
			Handler:    _Chat_SendManyMsg_Handler,
		},
		{
			MethodName: "ackMsg",
			Handler:    _Chat_AckMsg_Handler,
		},
		{
			MethodName: "syncMsg",
			Handler:    _Chat_SyncMsg_Handler,
		},
		{
			MethodName: "withdrawMsg",
			Handler:    _Chat_WithdrawMsg_Handler,
		},
		{
			MethodName: "batchDelMsg",
			Handler:    _Chat_BatchDelMsg_Handler,
		},
		{
			MethodName: "groupGet",
			Handler:    _Chat_GroupGet_Handler,
		},
		{
			MethodName: "groupGets",
			Handler:    _Chat_GroupGets_Handler,
		},
		{
			MethodName: "groupAdd",
			Handler:    _Chat_GroupAdd_Handler,
		},
		{
			MethodName: "groupUpdate",
			Handler:    _Chat_GroupUpdate_Handler,
		},
		{
			MethodName: "groupBatchDel",
			Handler:    _Chat_GroupBatchDel_Handler,
		},
		{
			MethodName: "userAddGroup",
			Handler:    _Chat_UserAddGroup_Handler,
		},
		{
			MethodName: "userExitGroup",
			Handler:    _Chat_UserExitGroup_Handler,
		},
		{
			MethodName: "getOnlineUsers",
			Handler:    _Chat_GetOnlineUsers_Handler,
		},
		{
			MethodName: "getConnectInfo",
			Handler:    _Chat_GetConnectInfo_Handler,
		},
		{
			MethodName: "offConnect",
			Handler:    _Chat_OffConnect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat.proto",
}
