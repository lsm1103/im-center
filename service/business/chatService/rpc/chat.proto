syntax = "proto3";

package chat;

message NullResp {}
message GetsQueryItem {
  string Key = 1;                                // key
  string Val = 2;                                // val int/str('xxx')/list('xx,xx,xx')
  string Handle = 3;                             // 操作方法 =/>/</like
  string NextHandle = 4;                         // 与下一个条件的操作方法 or/and
}
message GetsReq {
  repeated GetsQueryItem Query = 1;              // 查询
  string OrderBy = 2;                            // 分组
  string Sort = 3;                               // 排序 desc/asc
  int64 Current = 4;                             // 当前页
  int64 PageSize = 5;                            // 页面大小
}

message FriendItem {
  int64 id = 1;                        // 自增主键
  int64 apply_user = 2;                // 申请用户id
  string apply_device = 3;              // 发送设备id
  int64 accept_user = 4;               // 接受用户id
  string apply_reason = 5;             // 申请理由
  string extra = 6;                    // 附加属性
  int64 status = 7;                    // 用户状态，-2：拉黑，-1：拒绝，0：申请中，1：同意
  string createTime = 8;               // 创建时间
  string updateTime = 9;               // 更新时间
}

message AddFriendReq {
  int64 apply_user = 1;                // 申请用户id
  string apply_device = 2;              // 发送设备id
  int64 accept_user = 3;               // 接受用户id
  string apply_reason = 4;             // 申请理由
}

message BatchChangeFriendRelationReq {
  repeated int64 friend_ids = 1;      // 好友关系id列表
  int64 operationType = 2;            // 操作类型
}

message FriendGetsResp {
  repeated FriendItem list = 1;        // 数据列表
  int64 current = 2;                   // 当前页
  int64 pageSize = 3;                  // 页面大小
  bool isNext = 4;                     // 是否有下一页
  //  int64 total = 5;                     // 总数
}

// --------------------------------------------------------------------------------------------------------
message SendOneMsgReq {
  int64 sender_type = 1;              // 发送者类型：1朋友，2打招呼，3转发
  int64 sender_id = 2;                // 发送者id
  string sender_device_id = 3;        // 发送设备id
  int64 receiver_id = 4;              // 接收者id(朋友id)
  string receiver_device_id = 5;      // 接收设备id
  int64 receiver_user_id = 6;         // 接收用户id
  int64 parent_id = 7;                // 父级id，引用功能
  string send_time = 8;               // 消息发送时间
  int64 msg_type = 9;                 // 消息类型
  string content = 10;                // 消息内容
}

message At {
  bool is_at_all = 1;                 // 是否@所有人
  repeated int64 at_user_ids = 2;     // 用户id列表
}
message SendManyMsgReq {
  int64 sender_type = 1;             // 发送者类型：1群内，2，3转发
  int64 sender_id = 2;                // 发送者id
  string sender_device_id = 3;        // 发送设备id
  int64 receiver_id = 4;              // 接收群组id
  string receiver_device_id = 5;      // 接收设备id
  int64 parent_id = 6;                // 父级id，引用功能
  string send_time = 7;               // 消息发送时间
  At at = 8;                          // 需要@的用户id
  int64 msg_type = 9;                // 消息类型
  string content = 10;                // 消息内容
}

// 消息ack
message AckMsgReq {
  int64 user_id = 1;                  // 发送者id
  string device_id = 2;               // 发送设备id
  string objectType = 3;              // 对象类型
   int64 objectId = 4;                 // 对象id
   int64 seq = 5;                      // 序列号
}

message singleFilter {
  int64 seq = 1;
  int64 friend_id = 2;                // 朋友id
}
message groupFilter {
  int64 seq = 1;
  int64 group_id = 2;                // 群聊id
}
message SyncMsgReq {
  int64 user_id = 1;                  // 用户id
  string device_id = 2;               // 设备id
  repeated singleFilter singleFilters = 3;      // 单聊消息seq
  repeated groupFilter groupFilters= 4;       // 群聊消息seq
  string operationType= 5;            // 操作类型,部分/全部未同步消息
}
message SingleMsgItem {
  int64 id = 1;                       // 自增主键, 序列号
  int64 seq = 2;                       // 自增主键, 序列号
  string sender_type = 3;             // 发送者类型：1朋友，2打招呼，3转发
  int64 sender_id = 4;                // 发送者id
  string sender_device_id = 5;        // 发送设备id
  int64 receiver_id = 6;              // 接收者id
  string msg_type = 7;                // 消息类型
  string content = 8;                 // 消息内容
  int64 parent_id = 9;                // 父级id，引用功能
  string send_time = 10;               // 消息发送时间
  int64 status = 11;                  // 消息状态：-1撤回，0未处理，1已读
  string createTime = 12;             // 创建时间
  string updateTime = 13;             // 更新时间
}
message GroupMsgItem {
  int64 id = 1;                       // 自增主键, 序列号
  int64 seq = 2;                       // 自增主键, 序列号
  string sender_type = 3;             // 发送者类型：1朋友，2打招呼，3转发
  int64 sender_id = 4;                // 发送者id
  string sender_device_id = 5;        // 发送设备id
  int64 receiver_id = 6;              // 接收者id
  At at = 7;                          // 需要@的用户id
  string msg_type = 8;                // 消息类型
  string content = 9;                 // 消息内容
  int64 parent_id = 10;                // 父级id，引用功能
  string send_time = 11;               // 消息发送时间
  int64 status = 12;                  // 消息状态：-1撤回，0未处理，1已读
  string createTime = 13;             // 创建时间
  string updateTime = 14;             // 更新时间
}
message SingleMsgs {
  repeated SingleMsgItem msgs = 1;
}
message GroupMsgs {
  repeated GroupMsgItem msgs = 1;
}
message SyncMsgResp {
  map<string, SingleMsgs> SingleMsgList = 1;  // 单聊消息列表
  map<string, GroupMsgs> GroupMsgList = 2;    // 群聊消息列表
}

message WithdrawMsgReq {
  int64 id = 1;                      // 消息id
  string objectType = 2;              // 对象类型
}

message BatchDelMsgReq {
  repeated int64 ids = 1;            // 消息id列表
  string objectType = 2;              // 对象类型
}

// --------------------------------------------------------------------------------------------------------
message GroupItem {
  int64 id = 1;                                  // 自增主键
  string name = 2;                               // 组名称
  int64 create_user = 3;                         // 创建者id
  string ico = 4;                                // 组图标
  string remark = 5;                             // 备注
  int64 parent_id = 6;                           // 父级id
  int64 group_type = 7;                          // 类型: 1部门、2用户组、3群组、4圈子、5话题
  int64 rank = 8;                                // 排序
  int64 status = 9;                              // 状态，0：弃用；1：正常
  string createTime = 10;                        // 创建时间
  string updateTime = 11;                        // 更新时间
}

// 获取群组详细信息
message GroupGetReq {
  int64 group_id = 1;                            // 组id
}

// 获取群组列表
message GroupGetsResp {
  repeated GroupItem list = 1;                   // 数据列表
  int64 current = 2;                             // 当前页
  int64 pageSize = 3;                            // 页面大小
  bool isNext = 4;                               // 是否有下一页
  //  int64 total = 5;                           // 总数
}

// 创建群组
message GroupAddReq {
  string name = 1;                               // 组名称
  int64 create_user = 2;                         // 创建者id
  string ico = 3;                                // 组图标
  string remark = 4;                             // 备注
  int64 parent_id = 5;                           // 父级id
  int64 group_type = 6;                          // 类型: 1部门、2用户组、3群组、4圈子、5话题
  int64 rank = 7;                                // 排序
}

// 修改群组
message GroupUpdateReq {
  int64 id = 1;                                  // 自增主键
  string name = 2;                               // 组名称
  int64 create_user = 3;                         // 创建者id
  string ico = 4;                                // 组图标
  string remark = 5;                             // 备注
  int64 parent_id = 6;                           // 父级id
  int64 group_type = 7;                          // 类型: 1部门、2用户组、3群组、4圈子、5话题
  int64 rank = 8;                                // 排序
  int64 status = 9;                              // 状态，0：弃用；1：正常
}

// 批量删除群组
message GroupBatchDelReq {
  repeated int64 group_ids = 1;                  // 群组id列表
}

// 加入群组
message UserAddGroupReq {
  int64 user_id = 1;                             // 加入者id
  int64 group_id = 2;                            // 群组id
}

// 退出群组
message UserExitGroupReq {
  int64 user_id = 1;                             // 退出者id
  int64 group_id = 2;                            // 群组id
}

// --------------------------------------------------------------------------------------------------------
message GetUserConnectListReq {
  int64 user_id = 1;                         // 发送者id
  int64 offset = 2;                          // 偏移量
  int64 limit = 3;                           // 限制条数
}
message ConnectItem{
  int64 User_id = 1;                         //用户id
  string Device_id = 2;                      //设备id
  string Server_ip = 3;                      //服务器ip
  string Connect_ip = 4;                     //连接ip
  string Register_time = 5;                  //上线时间
  string Heartbeat_time = 6;                 //上次心跳时间
  string UnRegister_time = 7;                //上次下线时间
  string Device_info = 8;                    //设备信息
}
message UserConnectListResp {
  repeated ConnectItem user_connect_list = 1; //在线用户列表
}
message ConnectUid {
  int64 user_id = 1;                  // 发送者id
  string device_id = 2;                // 发送设备id
}

service Chat {
  rpc addFriend(AddFriendReq) returns(NullResp); // 添加朋友
  rpc batchChangeFriendRelation(BatchChangeFriendRelationReq) returns(NullResp); // 拒绝/拉黑/删除朋友
  rpc friendGets(GetsReq) returns(FriendGetsResp); // 获取朋友列表"   // 获取朋友详细信息见获取用户详细信

  rpc sendOneMsg(SendOneMsgReq) returns(NullResp); // 单发消息，分享/引用
  rpc sendManyMsg(SendManyMsgReq) returns(NullResp); // 多发消息，分享/引用
  rpc ackMsg(AckMsgReq) returns(NullResp); // 确认消息送达
  rpc syncMsg(SyncMsgReq) returns(SyncMsgResp); // 同步离线消息
  rpc withdrawMsg(WithdrawMsgReq) returns(NullResp); // 撤回消息
  rpc batchDelMsg(BatchDelMsgReq) returns(NullResp); // 删除消息
  // --------------------------------------------------------------------------------------------------------
  // 群组
  rpc groupGet (GroupGetReq) returns(GroupItem);    // 获取群组详细信息
  rpc groupGets (GetsReq) returns(GroupGetsResp);    // 获取群组列表
  rpc groupAdd (GroupAddReq) returns(NullResp);   // 创建群组
  rpc groupUpdate (GroupUpdateReq) returns(NullResp);    // 修改群组
  rpc groupBatchDel (GroupBatchDelReq) returns(NullResp);   // 批量删除群组
  // 用户群组关系
  rpc userAddGroup (UserAddGroupReq) returns(NullResp);   // 加入群组
  rpc userExitGroup (UserExitGroupReq) returns(NullResp);   // 退出群组
  // --------------------------------------------------------------------------------------------------------
  rpc getOnlineUsers (GetUserConnectListReq) returns(UserConnectListResp);   // 获取某用户连接列表
  rpc getConnectInfo (ConnectUid) returns(ConnectItem);   // 获取连接详情
  rpc offConnect (ConnectUid) returns(NullResp);   // 关闭连接
  //rpc getServerInfo (GetServerInfoReq) returns(ServerInfoResp);   // 获取服务状态
}
