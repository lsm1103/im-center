// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"im-center/service/connect/core/connect/ws"
	"net/http"

	"im-center/service/connect/api/internal/handler/connect"
	"im-center/service/connect/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/getConnectInfo",
				Handler: connect.GetConnectInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/offConnect",
				Handler: connect.OffConnectHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/getUserConnectList",
				Handler: connect.GetUserConnectListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sendOneMsg",
				Handler: connect.SendOneMsgHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sendManyMsg",
				Handler: connect.SendManyMsgHandler(serverCtx),
			},
			//{
			//	Method:  http.MethodGet,
			//	Path:    "/getServerInfo",
			//	Handler: connect.GetServerInfoHandler(serverCtx),
			//},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/connect/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method: http.MethodGet,
				Path:    "/im",
				Handler: func(w http.ResponseWriter, r *http.Request) {
					ws.WsServer(w, r, serverCtx)
				},
			},
			{
				Method:  http.MethodGet,
				Path:    "/getServerInfo",
				Handler: connect.GetServerInfoHandler(serverCtx),
			},
		},
	)
}
